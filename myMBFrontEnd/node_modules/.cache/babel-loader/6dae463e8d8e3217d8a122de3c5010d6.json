{"remainingRequest":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/babel-loader/lib/index.js!/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/src/pages/Comment/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/src/pages/Comment/index.vue","mtime":1583675320000},{"path":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizihan/Projects/JavaScriptPractice/myMessageBoard/myMBFrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3dlaXppaGFuL1Byb2plY3RzL0phdmFTY3JpcHRQcmFjdGljZS9teU1lc3NhZ2VCb2FyZC9teU1CRnJvbnRFbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBjcmVhdGVDb21tZW50U2VydmljZSwgZ2V0Q29tbWVudExpc3RTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY29tbWVudCc7CmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JzsKaW1wb3J0IExpc3QgZnJvbSAnLi9MaXN0JzsKaW1wb3J0IGV2ZW50IGZyb20gJy4uLy4uL3V0aWxzL2V2ZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIElucHV0OiBJbnB1dCwKICAgIExpc3Q6IExpc3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXJUeXBlOiAxLAogICAgICAvLyAxIC0g55yL5YWo6YOo77ybMiAtIOWPqueci+iHquW3sQogICAgICBsaXN0OiBbLy8gLy8g5qih5ouf5pWw5o2uCiAgICAgICAgLy8gewogICAgICAgIC8vICAgICBfaWQ6IDEsCiAgICAgICAgLy8gICAgIHVzZXJuYW1lOiAnemhhbmdzYW4nLAogICAgICAgIC8vICAgICBjb250ZW50OiAn55WZ6KiA5YaF5a65QSDnlZnoqIDlhoXlrrlBIOeVmeiogOWGheWuuUEg55WZ6KiA5YaF5a65QSDnlZnoqIDlhoXlrrlBICcsCiAgICAgICAgLy8gICAgIGNyZWF0ZWRBdDogRGF0ZS5ub3coKQogICAgICAgIC8vIH0sCiAgICAgICAgLy8gewogICAgICAgIC8vICAgICBfaWQ6IDIsCiAgICAgICAgLy8gICAgIHVzZXJuYW1lOiAnbGlzaScsCiAgICAgICAgLy8gICAgIGNvbnRlbnQ6ICfnlZnoqIDlhoXlrrlCIOeVmeiogOWGheWuuUIg55WZ6KiA5YaF5a65QiDnlZnoqIDlhoXlrrlCIOeVmeiogOWGheWuuUIgJywKICAgICAgICAvLyAgICAgY3JlYXRlZEF0OiBEYXRlLm5vdygpIC0gNSAqIDYwICogMTAwMCAvLyA1IOWIhumSn+S7peWJjQogICAgICAgIC8vIH0sCiAgICAgICAgLy8gewogICAgICAgIC8vICAgICBfaWQ6IDMsCiAgICAgICAgLy8gICAgIHVzZXJuYW1lOiAnd2FuZ3d1JywKICAgICAgICAvLyAgICAgY29udGVudDogJ+eVmeiogOWGheWuuUMg55WZ6KiA5YaF5a65QyDnlZnoqIDlhoXlrrlDIOeVmeiogOWGheWuuUMg55WZ6KiA5YaF5a65QyAnLAogICAgICAgIC8vICAgICBjcmVhdGVkQXQ6IERhdGUubm93KCkgLSAxMCAqIDYwICogMTAwMCAvLyAxMCDliIbpkp/ku6XliY0KICAgICAgICAvLyB9LAogICAgICBdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbHRlclR5cGU6IGZ1bmN0aW9uIGZpbHRlclR5cGUoKSB7CiAgICAgIHRoaXMuZ2V0Q29tbWVudExpc3QoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENvbW1lbnRMaXN0OiBmdW5jdGlvbiBnZXRDb21tZW50TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21tZW50TGlzdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRDb21tZW50TGlzdFNlcnZpY2UoX3RoaXMuZmlsdGVyVHlwZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNvbW1lbnRMaXN0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmxpc3QgPSBjb21tZW50TGlzdDsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFkZENvbW1lbnQ6IGZ1bmN0aW9uIGFkZENvbW1lbnQoY29udGVudCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbW1lbnRTZXJ2aWNlKGNvbnRlbnQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgX3RoaXMyLmxpc3QudW5zaGlmdChkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlSGFuZGxlcjogZnVuY3Rpb24gdXBkYXRlSGFuZGxlcihuZXdDb21tZW50KSB7CiAgICAgIHRoaXMubGlzdCA9IHRoaXMubGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBjb25zb2xlLmxvZyhpdGVtLl9pZCwgbmV3Q29tbWVudC5faWQpOwoKICAgICAgICBpZiAoaXRlbS5faWQgPT09IG5ld0NvbW1lbnQuX2lkKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnbmV3Q29tbWVudCcsIG5ld0NvbW1lbnQpOwogICAgICAgICAgcmV0dXJuIG5ld0NvbW1lbnQ7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMzLmdldENvbW1lbnRMaXN0KCk7IC8vIOabtOaWsOaVsOaNruaXtu+8jOebkeWQrAoKCiAgICAgICAgICAgICAgZXZlbnQuJG9uKCdvbkNvbW1lbnRVcGRhdGUnLCBfdGhpczMudXBkYXRlSGFuZGxlcik7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBldmVudC4kb2ZmKCdvbkNvbW1lbnRVcGRhdGUnLCB0aGlzLnVwZGF0ZUhhbmRsZXIpOwogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,SAAA,oBAAA,EAAA,qBAAA,QAAA,wBAAA;AACA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,KAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,CADA;AACA;AACA,MAAA,IAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAFA,KAAA;AAwBA,GA9BA;AA+BA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,cAAA;AACA;AAHA,GA/BA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,qBAAA,CAAA,KAAA,CAAA,UAAA,CAFA;;AAAA;AAEA,gBAAA,WAFA;AAGA,gBAAA,KAAA,CAAA,IAAA,GAAA,WAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KALA;AAMA,IAAA,UANA,sBAMA,OANA,EAMA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQA,oBAAA,CAAA,OAAA,CARA;;AAAA;AAQA,gBAAA,IARA;;AAUA,gBAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAjBA;AAkBA,IAAA,aAlBA,yBAkBA,UAlBA,EAkBA;AACA,WAAA,IAAA,GAAA,KAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,EAAA,UAAA,CAAA,GAAA;;AACA,YAAA,IAAA,CAAA,GAAA,KAAA,UAAA,CAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,UAAA;AACA,iBAAA,UAAA;AACA;;AACA,eAAA,IAAA;AACA,OAPA,CAAA;AAQA;AA3BA,GApCA;AAiEA,EAAA,OAjEA,qBAiEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MAAA,CAAA,cAAA,GADA,CAGA;;;AACA,cAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,aAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,GAtEA;AAuEA,EAAA,aAvEA,2BAuEA;AACA,IAAA,KAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,KAAA,aAAA;AACA;AAzEA,CAAA","sourcesContent":["<template>\n    <div class=\"container\">\n        <Input @addComment=\"addComment\"/>\n        <div style=\"margin-top: 20px;\">\n            <el-radio v-model=\"filterType\" :label=\"1\">看全部</el-radio>\n            <el-radio v-model=\"filterType\" :label=\"2\">只看自己</el-radio>\n        </div>\n        <List :list=\"list\"/>\n    </div>\n</template>\n\n<script>\nimport { createCommentService, getCommentListService } from '../../services/comment'\nimport Input from './Input'\nimport List from './List'\nimport event from '../../utils/event'\n\nexport default {\n    components: {\n        Input,\n        List\n    },\n    data() {\n        return {\n            filterType: 1, // 1 - 看全部；2 - 只看自己\n            list: [\n                // // 模拟数据\n                // {\n                //     _id: 1,\n                //     username: 'zhangsan',\n                //     content: '留言内容A 留言内容A 留言内容A 留言内容A 留言内容A ',\n                //     createdAt: Date.now()\n                // },\n                // {\n                //     _id: 2,\n                //     username: 'lisi',\n                //     content: '留言内容B 留言内容B 留言内容B 留言内容B 留言内容B ',\n                //     createdAt: Date.now() - 5 * 60 * 1000 // 5 分钟以前\n                // },\n                // {\n                //     _id: 3,\n                //     username: 'wangwu',\n                //     content: '留言内容C 留言内容C 留言内容C 留言内容C 留言内容C ',\n                //     createdAt: Date.now() - 10 * 60 * 1000 // 10 分钟以前\n                // },\n            ]\n        }\n    },\n    watch: {\n        filterType() {\n            this.getCommentList()\n        }\n    },\n    methods: {\n        async getCommentList() {\n            // 获取列表\n            const commentList = await getCommentListService(this.filterType)\n            this.list = commentList\n        },\n        async addComment(content) {\n            // const data = {\n            //     id: this.list.length + 1,\n            //     username: 'zhangsan',\n            //     content,\n            //     createdAt: Date.now()\n            // }\n\n            const data = await createCommentService(content)\n\n            this.list.unshift(data)\n        },\n        updateHandler(newComment) {\n            this.list = this.list.map(item => {\n                console.log(item._id, newComment._id)\n                if (item._id === newComment._id) {\n                    console.log('newComment', newComment)\n                    return newComment\n                }\n                return item\n            })\n        },\n    },\n    async mounted() {\n        this.getCommentList()\n\n        // 更新数据时，监听\n        event.$on('onCommentUpdate', this.updateHandler)\n    },\n    beforeDestroy() {\n        event.$off('onCommentUpdate', this.updateHandler)\n    }\n}\n</script>\n\n<style>\n.container {\n    margin: 20px 50px 0;\n}\n</style>"],"sourceRoot":"src/pages/Comment"}]}